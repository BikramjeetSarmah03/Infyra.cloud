/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AuthLayoutRouteImport } from './pages/auth/_layout'
import { Route as protectedLayoutRouteImport } from './pages/(protected)/_layout'
import { Route as protectedIndexRouteImport } from './pages/(protected)/index'
import { Route as AuthRegisterRouteImport } from './pages/auth/register'
import { Route as AuthLoginRouteImport } from './pages/auth/login'
import { Route as protectedProjectsIndexRouteImport } from './pages/(protected)/projects/index'
import { Route as protectedApplicationsIndexRouteImport } from './pages/(protected)/applications/index'
import { Route as AuthPasswordForgotRouteImport } from './pages/auth/password/forgot'
import { Route as protectedProjectsProjectLayoutRouteImport } from './pages/(protected)/projects/$project/_layout'
import { Route as protectedProjectsProjectIndexRouteImport } from './pages/(protected)/projects/$project/index'
import { Route as protectedProjectsProjectSettingsRouteImport } from './pages/(protected)/projects/$project/settings'
import { Route as protectedProjectsProjectLogsRouteImport } from './pages/(protected)/projects/$project/logs'
import { Route as protectedProjectsProjectDeploymentsRouteImport } from './pages/(protected)/projects/$project/deployments'
import { Route as protectedProjectsProjectAnalyticsRouteImport } from './pages/(protected)/projects/$project/analytics'

const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedLayoutRoute = protectedLayoutRouteImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedIndexRoute = protectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => protectedLayoutRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const protectedProjectsIndexRoute = protectedProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => protectedLayoutRoute,
} as any)
const protectedApplicationsIndexRoute =
  protectedApplicationsIndexRouteImport.update({
    id: '/applications/',
    path: '/applications/',
    getParentRoute: () => protectedLayoutRoute,
  } as any)
const AuthPasswordForgotRoute = AuthPasswordForgotRouteImport.update({
  id: '/password/forgot',
  path: '/password/forgot',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const protectedProjectsProjectLayoutRoute =
  protectedProjectsProjectLayoutRouteImport.update({
    id: '/projects/$project',
    path: '/projects/$project',
    getParentRoute: () => protectedLayoutRoute,
  } as any)
const protectedProjectsProjectIndexRoute =
  protectedProjectsProjectIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => protectedProjectsProjectLayoutRoute,
  } as any)
const protectedProjectsProjectSettingsRoute =
  protectedProjectsProjectSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => protectedProjectsProjectLayoutRoute,
  } as any)
const protectedProjectsProjectLogsRoute =
  protectedProjectsProjectLogsRouteImport.update({
    id: '/logs',
    path: '/logs',
    getParentRoute: () => protectedProjectsProjectLayoutRoute,
  } as any)
const protectedProjectsProjectDeploymentsRoute =
  protectedProjectsProjectDeploymentsRouteImport.update({
    id: '/deployments',
    path: '/deployments',
    getParentRoute: () => protectedProjectsProjectLayoutRoute,
  } as any)
const protectedProjectsProjectAnalyticsRoute =
  protectedProjectsProjectAnalyticsRouteImport.update({
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => protectedProjectsProjectLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof protectedIndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/projects/$project': typeof protectedProjectsProjectLayoutRouteWithChildren
  '/auth/password/forgot': typeof AuthPasswordForgotRoute
  '/applications': typeof protectedApplicationsIndexRoute
  '/projects': typeof protectedProjectsIndexRoute
  '/projects/$project/analytics': typeof protectedProjectsProjectAnalyticsRoute
  '/projects/$project/deployments': typeof protectedProjectsProjectDeploymentsRoute
  '/projects/$project/logs': typeof protectedProjectsProjectLogsRoute
  '/projects/$project/settings': typeof protectedProjectsProjectSettingsRoute
  '/projects/$project/': typeof protectedProjectsProjectIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof protectedIndexRoute
  '/auth/password/forgot': typeof AuthPasswordForgotRoute
  '/applications': typeof protectedApplicationsIndexRoute
  '/projects': typeof protectedProjectsIndexRoute
  '/projects/$project/analytics': typeof protectedProjectsProjectAnalyticsRoute
  '/projects/$project/deployments': typeof protectedProjectsProjectDeploymentsRoute
  '/projects/$project/logs': typeof protectedProjectsProjectLogsRoute
  '/projects/$project/settings': typeof protectedProjectsProjectSettingsRoute
  '/projects/$project': typeof protectedProjectsProjectIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(protected)': typeof protectedLayoutRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/(protected)/': typeof protectedIndexRoute
  '/(protected)/projects/$project': typeof protectedProjectsProjectLayoutRouteWithChildren
  '/auth/password/forgot': typeof AuthPasswordForgotRoute
  '/(protected)/applications/': typeof protectedApplicationsIndexRoute
  '/(protected)/projects/': typeof protectedProjectsIndexRoute
  '/(protected)/projects/$project/analytics': typeof protectedProjectsProjectAnalyticsRoute
  '/(protected)/projects/$project/deployments': typeof protectedProjectsProjectDeploymentsRoute
  '/(protected)/projects/$project/logs': typeof protectedProjectsProjectLogsRoute
  '/(protected)/projects/$project/settings': typeof protectedProjectsProjectSettingsRoute
  '/(protected)/projects/$project/': typeof protectedProjectsProjectIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/projects/$project'
    | '/auth/password/forgot'
    | '/applications'
    | '/projects'
    | '/projects/$project/analytics'
    | '/projects/$project/deployments'
    | '/projects/$project/logs'
    | '/projects/$project/settings'
    | '/projects/$project/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/auth/password/forgot'
    | '/applications'
    | '/projects'
    | '/projects/$project/analytics'
    | '/projects/$project/deployments'
    | '/projects/$project/logs'
    | '/projects/$project/settings'
    | '/projects/$project'
  id:
    | '__root__'
    | '/(protected)'
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/(protected)/'
    | '/(protected)/projects/$project'
    | '/auth/password/forgot'
    | '/(protected)/applications/'
    | '/(protected)/projects/'
    | '/(protected)/projects/$project/analytics'
    | '/(protected)/projects/$project/deployments'
    | '/(protected)/projects/$project/logs'
    | '/(protected)/projects/$project/settings'
    | '/(protected)/projects/$project/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  protectedLayoutRoute: typeof protectedLayoutRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)/': {
      id: '/(protected)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedIndexRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/(protected)/projects/': {
      id: '/(protected)/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof protectedProjectsIndexRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
    '/(protected)/applications/': {
      id: '/(protected)/applications/'
      path: '/applications'
      fullPath: '/applications'
      preLoaderRoute: typeof protectedApplicationsIndexRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
    '/auth/password/forgot': {
      id: '/auth/password/forgot'
      path: '/password/forgot'
      fullPath: '/auth/password/forgot'
      preLoaderRoute: typeof AuthPasswordForgotRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/(protected)/projects/$project': {
      id: '/(protected)/projects/$project'
      path: '/projects/$project'
      fullPath: '/projects/$project'
      preLoaderRoute: typeof protectedProjectsProjectLayoutRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
    '/(protected)/projects/$project/': {
      id: '/(protected)/projects/$project/'
      path: '/'
      fullPath: '/projects/$project/'
      preLoaderRoute: typeof protectedProjectsProjectIndexRouteImport
      parentRoute: typeof protectedProjectsProjectLayoutRoute
    }
    '/(protected)/projects/$project/settings': {
      id: '/(protected)/projects/$project/settings'
      path: '/settings'
      fullPath: '/projects/$project/settings'
      preLoaderRoute: typeof protectedProjectsProjectSettingsRouteImport
      parentRoute: typeof protectedProjectsProjectLayoutRoute
    }
    '/(protected)/projects/$project/logs': {
      id: '/(protected)/projects/$project/logs'
      path: '/logs'
      fullPath: '/projects/$project/logs'
      preLoaderRoute: typeof protectedProjectsProjectLogsRouteImport
      parentRoute: typeof protectedProjectsProjectLayoutRoute
    }
    '/(protected)/projects/$project/deployments': {
      id: '/(protected)/projects/$project/deployments'
      path: '/deployments'
      fullPath: '/projects/$project/deployments'
      preLoaderRoute: typeof protectedProjectsProjectDeploymentsRouteImport
      parentRoute: typeof protectedProjectsProjectLayoutRoute
    }
    '/(protected)/projects/$project/analytics': {
      id: '/(protected)/projects/$project/analytics'
      path: '/analytics'
      fullPath: '/projects/$project/analytics'
      preLoaderRoute: typeof protectedProjectsProjectAnalyticsRouteImport
      parentRoute: typeof protectedProjectsProjectLayoutRoute
    }
  }
}

interface protectedProjectsProjectLayoutRouteChildren {
  protectedProjectsProjectAnalyticsRoute: typeof protectedProjectsProjectAnalyticsRoute
  protectedProjectsProjectDeploymentsRoute: typeof protectedProjectsProjectDeploymentsRoute
  protectedProjectsProjectLogsRoute: typeof protectedProjectsProjectLogsRoute
  protectedProjectsProjectSettingsRoute: typeof protectedProjectsProjectSettingsRoute
  protectedProjectsProjectIndexRoute: typeof protectedProjectsProjectIndexRoute
}

const protectedProjectsProjectLayoutRouteChildren: protectedProjectsProjectLayoutRouteChildren =
  {
    protectedProjectsProjectAnalyticsRoute:
      protectedProjectsProjectAnalyticsRoute,
    protectedProjectsProjectDeploymentsRoute:
      protectedProjectsProjectDeploymentsRoute,
    protectedProjectsProjectLogsRoute: protectedProjectsProjectLogsRoute,
    protectedProjectsProjectSettingsRoute:
      protectedProjectsProjectSettingsRoute,
    protectedProjectsProjectIndexRoute: protectedProjectsProjectIndexRoute,
  }

const protectedProjectsProjectLayoutRouteWithChildren =
  protectedProjectsProjectLayoutRoute._addFileChildren(
    protectedProjectsProjectLayoutRouteChildren,
  )

interface protectedLayoutRouteChildren {
  protectedIndexRoute: typeof protectedIndexRoute
  protectedProjectsProjectLayoutRoute: typeof protectedProjectsProjectLayoutRouteWithChildren
  protectedApplicationsIndexRoute: typeof protectedApplicationsIndexRoute
  protectedProjectsIndexRoute: typeof protectedProjectsIndexRoute
}

const protectedLayoutRouteChildren: protectedLayoutRouteChildren = {
  protectedIndexRoute: protectedIndexRoute,
  protectedProjectsProjectLayoutRoute:
    protectedProjectsProjectLayoutRouteWithChildren,
  protectedApplicationsIndexRoute: protectedApplicationsIndexRoute,
  protectedProjectsIndexRoute: protectedProjectsIndexRoute,
}

const protectedLayoutRouteWithChildren = protectedLayoutRoute._addFileChildren(
  protectedLayoutRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthPasswordForgotRoute: typeof AuthPasswordForgotRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthPasswordForgotRoute: AuthPasswordForgotRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  protectedLayoutRoute: protectedLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
